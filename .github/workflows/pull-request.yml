name: Pull Request
on:
  pull_request:
    branches: [ main ]
  merge_group:
    branches: [ main ]
permissions:
  pull-requests: write
  contents: read
jobs:
  pr-verify:
    runs-on: ubuntu-latest
    name: PR Verify
    env:
      AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
      AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      DIGITALOCEAN_TOKEN: "${{ secrets.DIGITALOCEAN_TOKEN }}"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clone Code
        uses: actions/checkout@v4.2.2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true
        working-directory: terraform
      - name: Post Format
        if: always() && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
        uses: robburger/terraform-pr-commenter@v1.5.0
        with:
          commenter_type: fmt
          commenter_input: ${{ format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) }}
          commenter_exitcode: ${{ steps.fmt.outputs.exitcode }}
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: terraform
      - name: Post Init
        if: always() && (steps.init.outcome == 'success' || steps.init.outcome == 'failure')
        uses: robburger/terraform-pr-commenter@v1.5.0
        with:
          commenter_type: init
          commenter_input: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
          commenter_exitcode: ${{ steps.init.outputs.exitcode }}
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: terraform
      - name: Post Validate
        if: always() && (steps.validate.outcome == 'success' || steps.validate.outcome == 'failure')
        uses: robburger/terraform-pr-commenter@v1.5.0
        with:
          commenter_type: validate
          commenter_input: ${{ format('{0}{1}', steps.validate.outputs.stdout, steps.validate.outputs.stderr) }}
          commenter_exitcode: ${{ steps.validate.outputs.exitcode }}
      - name: Terraform Plan
        id: plan
        run: terraform plan -out workspace.plan
        working-directory: terraform
      - name: Post Plan
        if: always() && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure')
        uses: robburger/terraform-pr-commenter@v1.5.0
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
